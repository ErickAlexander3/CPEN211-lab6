Partner 1 and partner 2 both read over the lab handout and deviced stratigies to complete the lab. Both partners coded regfile, ALU, shifter, buildingblocks and datapath on their computers individually while discussing the main concept. The two are merged together by partner1, and where the codes differ, we used partner1's code and have partner2's as backup for when the testbenches do not work. Partner 2 coded the ALU_tb, shifter_tb, datapath_tb, and regfile_tb testbench and developed the test cases while partner 1 watched and deviced some other test cases as well as corner cases.
Partner1 commented regfile.v, ALU.v, shifter.v, buildingblocks.v and datapath.v, while partner commented regfile_tb.v, ALU_tb.v, shifter_tb.v, and dtapath.v. Both partners worked together on debugging throughout the process - the testbench shows that a operation in the shifter did not work (line 18), thus, the particular line of code is replaced with partner2's backup code. Partner1 revised the datapath_tb testbench to resolve the output outputting all xs. Partner 2 added shifter_wave.do, ALU_wave.do, regfile_wave.do, datapath_wave.do macro files for the waves. Both partners compiled the final code in Quartus to make sure it is synthesizable, and to make sure that the code works correctly on the DE1-SoC bord.